/* SQL Project Rayan Aljahan */

/* Query 1 - query used in the first insight */

SELECT c.name AS dvd_genre,
       ROUND(AVG(f.rental_rate), 2)AS Average_rental_rate
FROM category c
JOIN film_category fc USING(category_id)
JOIN film f USING (film_id)
GROUP BY 1
ORDER BY 2
LIMIT 10;

/* Query 2 - query used in the second insight */

WITH t1 AS
  (SELECT *,
          first_name || ' ' || last_name AS full_name
   FROM customer)
SELECT full_name,
       email,
       address,
       phone,
       city,
       country,
       SUM(amount) AS tortal_purchase_in_usd
FROM t1
JOIN address USING(address_id)
JOIN city USING(city_id)
JOIN country USING(country_id)
JOIN payment USING(customer_id)
GROUP BY 1,
         2,
         3,
         4,
         5,
         6
ORDER BY 7 DESC
LIMIT 7;

/* Query 3 - query used in the third insight */

WITH t1 AS
  (SELECT *,
          DATE_PART('day', return_date - rental_date) AS date_difference
   FROM rental),
     t2 AS
  (SELECT rental_duration,
          date_difference,
          CASE
              WHEN rental_duration > date_difference THEN 'Returned early'
              WHEN rental_duration = date_difference THEN 'Returned on Time'
              ELSE 'Returned late'
          END AS Return_status
   FROM film f
   JOIN inventory USING(film_id)
   JOIN t1 USING(inventory_id))
SELECT Return_status,
       COUNT(*) AS total_numbers_of_films
FROM t2
GROUP BY 1
ORDER BY 2 DESC;

/* Query 4 - query used in the fourth insight */

WITH customers_membership AS
  (SELECT c.first_name AS first_name,
          c.last_name AS last_name,
          SUM(p.amount) AS total_spent,
          CASE
              WHEN SUM(p.amount) > 210 THEN 'diamond'
              WHEN SUM(p.amount) BETWEEN 190 AND 210 THEN 'platinum'
              WHEN SUM(p.amount) BETWEEN 170 AND 190 THEN 'gold'
              WHEN SUM(p.amount) BETWEEN 160 AND 170 THEN 'silver'
              ELSE 'bronze'
          END AS membership_status
   FROM customer AS c
   INNER JOIN payment AS p ON c.customer_id = p.customer_id
   GROUP BY c.first_name,
            c.last_name
   HAVING SUM(p.amount) > 155)
SELECT cm.first_name || ' ' || cm.last_name AS full_name,
       cm.total_spent,
       cm.membership_status,
       RANK() OVER (PARTITION BY cm.membership_status
                    ORDER BY cm.total_spent DESC) AS customer_membership_rank
FROM customers_membership AS cm;

